Run started:2024-05-14 09:42:38.351531

Test results:
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'your_secret_key'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.8/plugins/b105_hardcoded_password_string.html
   Location: .\app.py:8:17
7	app = Flask(__name__)
8	app.secret_key = 'your_secret_key'
9	

--------------------------------------------------
>> Issue: [B201:flask_debug_true] A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code.
   Severity: High   Confidence: Medium
   CWE: CWE-94 (https://cwe.mitre.org/data/definitions/94.html)
   More Info: https://bandit.readthedocs.io/en/1.7.8/plugins/b201_flask_debug_true.html
   Location: .\app.py:101:4
100	if __name__ == '__main__':
101	    app.run(debug=True)

--------------------------------------------------
>> Issue: [B413:blacklist] The pyCrypto library and its module AES are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.8/blacklists/blacklist_imports.html#b413-import-pycrypto
   Location: .\cipher.py:3:0
2	import json
3	from Crypto.Cipher import AES
4	from Crypto.Random import get_random_bytes

--------------------------------------------------
>> Issue: [B413:blacklist] The pyCrypto library and its module get_random_bytes are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.8/blacklists/blacklist_imports.html#b413-import-pycrypto
   Location: .\cipher.py:4:0
3	from Crypto.Cipher import AES
4	from Crypto.Random import get_random_bytes
5	from base64 import b64encode, b64decode

--------------------------------------------------

Code scanned:
	Total lines of code: 147
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 1
		Medium: 0
		High: 3
	Total issues (by confidence):
		Undefined: 0
		Low: 0
		Medium: 2
		High: 2
Files skipped (0):
